version: 2.1
#slack orb 0.2.21
#Create your key here: https://api.slack.com/incoming-webhooks
orbs:
description: A notification orb for slack. Submit messages to your slack channels.
commands:
  ## NOTIFY ##
  notify:
    description: Notify a slack channel with a custom message
    parameters:
      webhook:
        description: Enter either your Webhook value or use the CircleCI UI to add your token under the 'SLACK_WEBHOOK' env var
        type: string
        default: ${SLACK_WEBHOOK}
      message:
        type: string
        default: Your job on CircleCI has completed.
    steps:
      - run: 
          name: Slack Notification
          command: |
            # TODO: Check that SLACK_WEBHOOK exists
            echo Notifying Slack Channel
            curl -X POST -H 'Content-type:\ application/json' --data '{"text":"<< parameters.message >>"}' << parameters.webhook >>
  ## STATUS ##
  status:
    description: Send a status alert at the end of a job based on success or failure. Must be the last step in a job.
    parameters:
      webhook:
        description: Enter either your Webhook value or use the CircleCI UI to add your token under the 'SLACK_WEBHOOK' env var
        type: string
        default: ${SLACK_WEBHOOK}
      circletoken:
        description: Input either your CircleCI personal token [WARNING NEVER DO THIS], or use the CircleCI UI to add your token under the 'CIRCLECI_TOKEN' env var
        type: string
        default: ${CIRCLECI_TOKEN}
    steps:
      - run: 
          name: Slack Status Alert Sent
          command: |
            sudo apt-get -qq install jq
            SLACK_BUILD_DATA=$(curl -s https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}?circle-token=<< parameters.circletoken >>)
            SLACK_BUILD_STATUS=$(echo "$SLACK_BUILD_DATA" | jq '.status')
            echo The current status is $SLACK_BUILD_STATUS
            if [ "$SLACK_BUILD_STATUS" != '"failed"' ]; then
                #If Successful
                curl -X POST -H 'Content-type:\ application/json' --data '{ "attachments":\ [ { "fallback":\ "Job has completed successfully!:\ '"$CIRCLE_BUILD_URL"'", "text":\ "<'"$CIRCLE_BUILD_URL"'|Job has completed successfully!>", "fields":\ [ { "title":\ "Project", "value":\ "'"$CIRCLE_PROJECT_REPONAME"'", "short":\ true }, { "title":\ "Job", "value":\ "CIRCLE_BUILD_NUM", "short":\ true } ], "color":\ "#42c88a" } ] }'c << parameters.webhook >>
            else
                #If Failed
                curl -X POST -H 'Content-type:\ application/json' --data '{ "attachments":\ [ { "fallback":\ "Job has failed:\ '"$CIRCLE_BUILD_URL"'", "text":\ "<'"$CIRCLE_BUILD_URL"'|Job Failure>", "fields":\ [ { "title":\ "Project", "value":\ "'"$CIRCLE_PROJECT_REPONAME"'", "short":\ true }, { "title":\ "Job", "value":\ "CIRCLE_BUILD_NUM", "short":\ true } ], "color":\ "#F35A00" } ] }'c << parameters.webhook >>
            fi
          when: always



          ### Notes ##
#
# '{ "attachments": [ { "fallback": "ReferenceError - UI is not defined: https://honeybadger.io/path/to/event/", "text": "<https://honeybadger.io/path/to/event/|ReferenceError> - UI is not defined", "fields": [ { "title": "Project", "value": "Awesome Project", "short": true }, { "title": "Environment", "value": "production", "short": true } ], "color": "#F35A00" } ] }'
#
#
# {
#     "attachments": [
#         {
#             "fallback": "ReferenceError - UI is not defined: https://honeybadger.io/path/to/event/",
#             "text": "<https://honeybadger.io/path/to/event/|ReferenceError> - UI is not defined",
#             "fields": [
#                 {
#                     "title": "Project",
#                     "value": "Awesome Project",
#                     "short": true
#                 },
#                 {
#                     "title": "Environment",
#                     "value": "production",
#                     "short": true
#                 }
#             ],
#             "color": "#F35A00"
#         }
#     ]
# }